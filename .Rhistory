mutate(pov = log(pov)) %>%
filter(pov == "N")
data_solow %>%
mutate(pov = log(pov)) %>%
filter(pov == "NA")
data_solow %>%
mutate(pov = log(pov)) %>%
filter(pov, is.na())
data_solow %>%
mutate(pov = log(pov)) %>%
filter(pov != NA)
rm(list = ls())
growth <- read_csv("https://raw.githubusercontent.com/gafnts/global-growth-accounting/main/countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
mutate(pov = log(pov)) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
mutate(pov = log(pov)) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
rm(list = ls())
growth <- read_csv("https://raw.githubusercontent.com/gafnts/global-growth-accounting/main/countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
mutate(pov = log(pov)) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
library(plotly)
lines <- function(data, x, y, color) {
p <-
data %>%
ggplot(aes({{x}}, {{y}}, color = {{color}})) +
geom_line()
ggplotly(p)
}
data_solow %>%
group_by(country) %>%
lines(year, pov, country)
pacman::p_load(panelr, plm, broom, stargazer)
# Declare data frame as panel data
panel  <-  panel_data(data_solow, id = country, wave = year)
# Filter initial and final years
datal85 <- data_solow %>% filter(year == 1985)
data88 <- data_solow %>% filter(year == 2019)
datal85
datal85
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
coeftest(vcov. = vcovHC, type = "HC1")
library(lmtest)
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
coeftest(vcov. = vcovHC, type = "HC1")
datal85 %>%
lm(pov ~ dy, data = . )
# Subset
datal85 <- data_solow %>% filter(year == 1985)
data88 <- data_solow %>% filter(year == 2019)
datal85 %>%
lm(pov ~ dy, data = . )
datal85
rm(list = ls())
growth <- read_csv("https://raw.githubusercontent.com/gafnts/global-growth-accounting/main/countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
mutate(pov = log(pov)) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
pacman::p_load(panelr, plm, broom, stargazer)
# Subset
datal85 <- data_solow %>% filter(year == 1985)
data88 <- data_solow %>% filter(year == 2019)
library(lmtest)
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
coeftest(vcov. = vcovHC, type = "HC1")
datal85
data_solow
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
data_solow
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, magrittr)
growth <- read_csv("https://raw.githubusercontent.com/gafnts/global-growth-accounting/main/countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
data_solow
pacman::p_load(panelr, plm, broom, stargazer)
# Subset
datal85 <- data_solow %>% filter(year == 1985)
data88 <- data_solow %>% filter(year == 2019)
datal85
library(lmtest)
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
coeftest(vcov. = vcovHC, type = "HC1")
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
summary()
# Simple regression models
datal85 %>%
lm(log(pov) ~ dy, data = . ) %>%
summary()
library(lmtest)
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
summary()
datal85 %>%
coeftest(vcov. = vcovHC, type = "HC1")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, magrittr)
growth <- read_csv("https://raw.githubusercontent.com/gafnts/global-growth-accounting/main/countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
growth <- read_csv("countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
library(plotly)
lines <- function(data, x, y, color) {
p <-
data %>%
ggplot(aes({{x}}, {{y}}, color = {{color}})) +
geom_line()
ggplotly(p)
}
data_solow %>%
group_by(country) %>%
lines(year, pov, country)
pacman::p_load(panelr, plm, broom, stargazer)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, magrittr)
pacman::p_load(panelr, plm, broom, stargazer) # Panel data
rm(list = ls())
growth <- read_csv("countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
library(plotly)
lines <- function(data, x, y, color) {
p <-
data %>%
ggplot(aes({{x}}, {{y}}, color = {{color}})) +
geom_line()
ggplotly(p)
}
data_solow %>%
group_by(country) %>%
lines(year, pov, country)
# Subset
datal85 <- data_solow %>% filter(year == 1985)
data88 <- data_solow %>% filter(year == 2019)
library(lmtest)
# Simple regression models
datal85 %>%
lm(pov ~ dy, data = . ) %>%
summary()
datal85 %>%
coeftest(vcov. = vcovHC, type = "HC1")
datal85
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, magrittr)
pacman::p_load(panelr, plm, broom, stargazer) # Panel data
pacman::p_load(tidyverse, magrittr)
growth <- read_csv("countries_growth.csv")
poverty <- read_csv("countries_poverty.csv")
data <- growth %>% left_join(poverty)
solow <- function(data, y, l, k, labsh) {
data %>%
mutate(
# Logs of output, capital and labor
y = log({{y}}),
k = log({{k}}),
l = log({{l}}),
# First differences (growth rates)
dy = ({{y}} - lag({{y}})) * 100,
dk = ({{k}} - lag({{k}})) * 100,
dl = ({{l}} - lag({{l}})) * 100,
# Share of capital in the economy
capsh = 1 - {{labsh}},
# Contributions of factors in the output growth
k_cont = dk * capsh,
l_cont = dl * {{labsh}},
tfp_cont = dy - k_cont - l_cont
) %>%
na.omit()
}
data_solow <-
data %>%
group_by(country) %>%
solow(y = y,
l = l,
k = k,
labsh = labsh) %>%
select(country:year, dy, k_cont, l_cont, tfp_cont, pov) %>%
ungroup()
# Subset
data85 <- data_solow %>% filter(year == 1985)
data19 <- data_solow %>% filter(year == 2019)
library(lmtest)
library(gridExtra)
# Simple regression models
m1 <- data85 %>% lm(pov ~ k_cont + l_cont + tfp_cont, data = . )
m2 <- data19 %>% lm(pov ~ k_cont + l_cont + tfp_cont, data = . )
# Plots
plotlist <- function(data, x, y) {
require(ggplot2)
require(purrr)
y <- enquo(y)
map(x, function(x)
ggplot(data, aes(!!sym(x), !!y)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
)
}
x <- c("k_cont","l_cont","tfp_cont")
plotlist(m1, x, pov) %>% grid.arrange(grobs = .)
plotlist(m2, x, pov) %>% grid.arrange(grobs = .)
# Summary
m1 %>% summary()
m2 %>% summary()
# Compute the differences
diff_pov <- data19$pov - data85$pov
diff_k <- data19$k_cont - data85$k_cont
diff_l <- data19$l_cont - data85$l_cont
diff_tfp <- data19$tfp_cont - data85$tfp_cont
# Regression with differenced data
m3 <- lm(diff_pov ~ diff_k + diff_l + diff_tfp)
# Plot
x <- c("diff_k","diff_l","diff_tfp")
plotlist(m3, x, diff_pov) %>% grid.arrange(grobs = .)
# Summary
m3 %>% summary()
pacman::p_load(panelr, plm, broom)
# Declare data frame as panel data
panel  <-  panel_data(data_solow, id = country, wave = year)
# Fixed effects
m4 <- plm(pov ~ k_cont + l_cont + tfp_cont,
data = panel,
index = c("country", "year"),
model = "within")
m4 %>% summary()
# Fixed effects
m5 <- plm(pov ~ k_cont + l_cont + tfp_cont,
data = panel,
index = c("country", "year"),
model = "within",
effect = "twoways")
# Summary
m5 %>% summary()
# Clustered standard errors
# (Adjustment for autocorrelation + heteroskedasticity)
coeftest(m5, vcov = vcovHC, type = "HC1")
library(stargazer)
# Gather clustered standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(m1, type = "HC1"))),
sqrt(diag(vcovHC(m2, type = "HC1"))),
sqrt(diag(vcovHC(m3, type = "HC1"))),
sqrt(diag(vcovHC(m4, type = "HC1"))),
sqrt(diag(vcovHC(m5, type = "HC1"))))
stargazer(m1, m2, m3, m4, m5,
digits = 3,
header = FALSE,
type = "latex",
se = rob_se,
title = "Test",
model.numbers = FALSE,
column.labels = c("(1)", "(2)", "(3)", "(4)", "(5)"))
stargazer(m1, m2, m3, m4, m5,
digits = 3,
header = FALSE,
type = "tezt",
se = rob_se,
title = "Test",
model.numbers = FALSE,
column.labels = c("(1)", "(2)", "(3)", "(4)", "(5)"))
stargazer(m1, m2, m3, m4, m5,
digits = 3,
header = FALSE,
type = "text",
se = rob_se,
title = "Test",
model.numbers = FALSE,
column.labels = c("(1)", "(2)", "(3)", "(4)", "(5)"))
